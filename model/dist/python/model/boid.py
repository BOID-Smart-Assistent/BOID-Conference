# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: llm/llm_rules_output.proto, common/schedule.proto, common/authenticate.proto, common/rule.proto, data/llm_output.proto, data/boid_output.proto, data/llm_input.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class BoidType(betterproto.Enum):
    BELIEF = 0
    OBLIGATION = 1
    INTENTION = 2
    DESIRE = 3


@dataclass
class LLMRulesOuput(betterproto.Message):
    # All the rules generated by LLM
    rules: List[str] = betterproto.string_field(1)


@dataclass
class Schedule(betterproto.Message):
    # All the timeslots in the schedule
    schedule: List["Day"] = betterproto.message_field(1)


@dataclass
class Day(betterproto.Message):
    date: str = betterproto.string_field(1)
    timeslots: List["Timeslot"] = betterproto.message_field(2)


@dataclass
class Timeslot(betterproto.Message):
    id: int = betterproto.int32_field(1)
    presentations: List["Presentation"] = betterproto.message_field(2)


@dataclass
class Presentation(betterproto.Message):
    """Rework this into a more detailed way"""

    id: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    topic: str = betterproto.string_field(3)


@dataclass
class Authenticate(betterproto.Message):
    id: str = betterproto.string_field(1)


@dataclass
class Rule(betterproto.Message):
    head: str = betterproto.string_field(1)
    complement: str = betterproto.string_field(2)
    rule_type: "BoidType" = betterproto.enum_field(3)


@dataclass
class LlmOutput(betterproto.Message):
    rules: List["Rule"] = betterproto.message_field(1)
    user_id: int = betterproto.int32_field(2)


@dataclass
class BoidOutput(betterproto.Message):
    # List of the ids of the presentation
    presentations: List[int] = betterproto.int32_field(1)
    user_id: int = betterproto.int32_field(2)


@dataclass
class LlmInput(betterproto.Message):
    # The schedule of the conference
    schedule: "Schedule" = betterproto.message_field(1)
    # the user information required for the rules
    user: "User" = betterproto.message_field(2)


@dataclass
class User(betterproto.Message):
    # Identification of the user
    id: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    obligations: List[str] = betterproto.string_field(3)
    interests: List[str] = betterproto.string_field(4)
    preferred_speakers: List[str] = betterproto.string_field(5)
    role: str = betterproto.string_field(6)
    affiliations: str = betterproto.string_field(7)
